# THIS MAKEFILE IS NOT READY!
#
# Copyright (C) 2001 Jean-Christophe FILLIATRE 
#	        2002 Yamagata Yoriyuki
#               2002 Yurii A. Rashkovskii
#
# Changed to work with MinGW by Yurii A. Rashkovskii <yrashk@openeas.org>
# 
# This library is free software; you can redistribute it and/or
# modify it under the terms of the GNU Library General Public
# License version 2, as published by the Free Software Foundation.
# 
# This library is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
# 
# See the GNU Library General Public License version 2 for more details
# (enclosed in the file COPYING).

#
# PLEASE CONFIGURE MAKEFILE WITH SETTING BELOW:
#

# // CONFIGURATION START

CONF_PREFIX=C:/Camomile
CONF_EXEC_PREFIX=C:/Camomile/exe
CONF_BINDIR=C:/Camomile/bin
CONF_DATADIR=C:/Camomile/lib

# // CONFIGURATION END


# where to install the binaries
prefix=$(CONF_PREFIX)
exec_prefix=$(CONF_EXEC_PREFIX)
BINDIR=$(CONF_BINDIR)

# where to install the data files
DATADIR=$(CONF_DATADIR)

# other variables set by ./configure
OCAMLC   = ocamlc
OCAMLOPT = ocamlopt
OCAMLDEP = ocamldep
OCAMLLIB = c:/Ocaml/lib
OCAMLBEST= opt
OCAMLVERSION = 3.04

SUBDIR = -I internal -I public
INCLUDES = $(SUBDIR)
BFLAGS = -g $(INCLUDES)
OFLAGS = $(INCLUDES)

###################################################################
# Compilation
###################################################################

INT =\
public/uchar.cmi public/ustorage.cmi public/uchannel.cmi\
public/ucategory.cmi public/unormalform.cmi public/ucasemap.cmi\
public/ucomp.cmi\
public/ustring.cmi public/utext.cmi public/ubuffer.cmi\
public/char_encoding.cmi\
public/udebug.cmi
OBJECTS =\
camomileconfig.cmo internal/helpers.cmo internal/bitsvect.cmo\
internal/bytesvect.cmo internal/tbl32.cmo internal/byte_labeled_dag.cmo\
internal/unidata.cmo internal/charmap.cmo internal/unimap.cmo\
public/uchar.cmo public/ustorage.cmo\
internal/ucs4.cmo public/uchannel.cmo\
public/ucategory.cmo public/unormalform.cmo public/ucasemap.cmo\
public/ucomp.cmo public/char_encoding.cmo\
public/ustring.cmo public/utext.cmo public/ubuffer.cmo\
public/udebug.cmo
OPTOBJECTS= $(OBJECTS:.cmo=.cmx)
TOOLS = \
tools/parse_unidata.byte tools/parse_uniset.byte tools/camlcharmap.byte\
tools/parse_specialcasing.byte tools/parse_casefolding.byte\
tools/parse_allkeys.byte
TESTS = \
test/recode.byte\
test/unitest.byte test/test_recode_netstring.byte test/casemap.byte

.PHONY : all byte opt tools test test.opt data charmap_data unimaps database
all : byte $(OCAMLBEST) unimaps charmap_data
byte : camomile.cma
opt : camomile.cmxa camomile.cmxs
tools : $(TOOLS)
test : byte $(TESTS)
test.opt : opt test/recode.opt test/unitest.opt

camomileconfig.ml :
	(echo "(* This file is automatically generated *)" &&\
	echo let datadir = "$(CONF_DATADIR)/camomile" &&\
	echo let charmapdir = "$(CONF_DATADIR)/camomile/charmaps" &&\
	echo let unimapdir = "$(CONF_DATADIR)/camomile/mappings") >\
	camomileconfig.ml

FROM_UNIDATA =\
database/combined_class.mar database/composition.mar\
database/decomposition.mar database/general_category.mar\
database/to_lower1.mar database/to_title1.mar database/to_upper1.mar
DATABASE =\
$(FROM_UNIDATA)\
database/allkeys.mar database/case_folding.mar\
database/composition_exclusion.mar database/lowercases.mar\
database/soft_dotted.mar database/special_casing.mar\
database/uppercases.mar
UNIDATA_DIR = /home/yori/src/unicode/unidata
COLLATIONDATA_DIR = /home/yori/src/unicode/tecre/tr10

database : $(DATABASE)

$(FROM_UNIDATA) : tools/parse_unidata.byte $(UNIDATA_DIR)/UnicodeData.txt
	tools/parse_unidata.byte database < $(UNIDATA_DIR)/UnicodeData.txt

database/allkeys.mar : tools/parse_allkeys.byte\
$(COLLATIONDATA_DIR)/allkeys.txt
	tools/parse_allkeys.byte database < $(COLLATIONDATA_DIR)/allkeys.txt
database/case_folding.mar : tools/parse_casefolding.byte\
$(UNIDATA_DIR)/CaseFolding.txt
	tools/parse_casefolding.byte database < $(UNIDATA_DIR)/CaseFolding.txt

database/composition_exclusion.mar : tools/parse_uniset.byte\
$(UNIDATA_DIR)/CompositionExclusions.txt
	tools/parse_uniset.byte  $@ < $(UNIDATA_DIR)/CompositionExclusions.txt

database/lowercases.mar : tools/parse_uniset.byte\
$(UNIDATA_DIR)/DerivedCoreProperties.txt
	grep Lowercase $(UNIDATA_DIR)/DerivedCoreProperties.txt |\
	tools/parse_uniset.byte $@

database/uppercases.mar : tools/parse_uniset.byte\
$(UNIDATA_DIR)/DerivedCoreProperties.txt
	grep Uppercase $(UNIDATA_DIR)/DerivedCoreProperties.txt |\
	tools/parse_uniset.byte $@

database/soft_dotted.mar : tools/parse_uniset.byte\
$(UNIDATA_DIR)/PropList.txt
	grep Soft_Dotted $(UNIDATA_DIR)/PropList.txt |\
	tools/parse_uniset.byte $@

database/special_casing.mar : tools/parse_specialcasing.byte\
$(UNIDATA_DIR)/SpecialCasing.txt
	tools/parse_specialcasing.byte database <\
	$(UNIDATA_DIR)/SpecialCasing.txt

CHARMAP_DATA := $(patsubst charmaps/%,charmaps.mar/%.mar, \
	$(filter-out charmaps/CVS, $(wildcard charmaps/*)))

charmap_data : charmaps.mar $(CHARMAP_DATA)
charmaps.mar :
	mkdir charmaps.mar
charmaps.mar/%.mar : tools/camlcharmap.$(OCAMLBEST) charmaps/$*
	tools/camlcharmap.$(OCAMLBEST) charmaps.mar < charmaps/$*

MAPPING_SOURCES = \
charmaps/GB2312 charmaps/EUC-JP charmaps/EUC-KR charmaps/EUC-TW
MAPPINGS = \
mappings/cns11643.mar  mappings/jisx0201.mar  mappings/ksc5601.mar\
mappings/gb2312.mar    mappings/jisx0208.mar\
mappings/iso88597.mar  mappings/jisx0212.mar

unimaps : $(MAPPINGS)
$(MAPPINGS) : mappings/gen_mappings.byte $(MAPPING_SOURCES)
	cd mappings && ocamlrun gen_mappings.byte

camomile.cma : $(INT) $(OBJECTS)
	$(OCAMLC) $(BFLAGS) -a -o camomile.cma $(OBJECTS)

camomile.cmxa : $(INT) $(OPTOBJECTS)
	$(OCAMLOPT) $(OFLAGS) -a -o camomile.cmxa $(OPTOBJECTS)

camomile.cmxs : camomile.cmxa
	$(OCAMLOPT) -shared -o camomile.cmxs camomile.cmxa

tools/camlcharmap.byte : camomile.cma tools/camlcharmap.ml
	$(OCAMLC) $(BFLAGS) -o tools/camlcharmap.byte str.cma camomile.cma tools/camlcharmap.ml

tools/camlcharmap.opt : camomile.cmxa tools/camlcharmap.ml
	$(OCAMLOPT) $(OFLAGS) -o tools/camlcharmap.opt str.cmxa camomile.cmxa tools/camlcharmap.ml

tools/parse_unidata.byte : camomile.cma tools/parse_unidata.ml
	$(OCAMLC) $(BFLAGS) -o tools/parse_unidata.byte str.cma camomile.cma tools/parse_unidata.ml

tools/parse_specialcasing.byte : camomile.cma tools/parse_specialcasing.ml
	$(OCAMLC) $(BFLAGS) -o tools/parse_specialcasing.byte str.cma camomile.cma tools/parse_specialcasing.ml

tools/parse_casefolding.byte : camomile.cma tools/parse_casefolding.ml
	$(OCAMLC) $(BFLAGS) -o tools/parse_casefolding.byte str.cma camomile.cma tools/parse_casefolding.ml

tools/parse_uniset.byte : camomile.cma tools/parse_uniset.ml
	$(OCAMLC) $(BFLAGS) -o tools/parse_uniset.byte str.cma camomile.cma tools/parse_uniset.ml

tools/parse_allkeys.byte : camomile.cma tools/parse_allkeys.ml
	$(OCAMLC) $(BFLAGS) -o tools/parse_allkeys.byte str.cma camomile.cma tools/parse_allkeys.ml

mappings/gen_mappings.byte : camomile.cma mappings/gen_mappings.ml
	$(OCAMLC) $(BFLAGS) -o mappings/gen_mappings.byte str.cma camomile.cma mappings/gen_mappings.ml

test/unitest.byte : camomile.cma test/unitest.ml
	$(OCAMLC) $(BFLAGS) -o test/unitest.byte str.cma netstring.cma unix.cma camomile.cma test/unitest.ml 

test/unitest.opt : camomile.cmxa test/unitest.ml
	$(OCAMLOPT) $(OFLAGS) -o test/unitest.opt str.cmxa netstring.cmxa unix.cmxa camomile.cmxa test/unitest.ml 

test/recode.byte : camomile.cma test/recode.ml
	$(OCAMLC) $(BFLAGS) -o test/recode.byte camomile.cma test/recode.ml 

test/casemap.byte : camomile.cma test/casemap.ml
	$(OCAMLC) $(BFLAGS) -o test/casemap.byte camomile.cma test/casemap.ml 

test/test_recode_netstring.byte : camomile.cma test/test_recode_netstring.ml
	$(OCAMLC) $(BFLAGS) -o test/test_recode_netstring.byte unix.cma str.cma netstring.cma camomile.cma -cclib -lpthread test/test_recode_netstring.ml

test/recode.opt : camomile.cmxa test/recode.ml
	$(OCAMLOPT) $(OFLAGS) -o test/recode.opt str.cmxa netstring.cmxa camomile.cmxa test/recode.ml 

###################################################################
# Installation and export
###################################################################

install: all
	mkdir -p $(OCAMLLIB)
	cp -f $(INT) $(OCAMLLIB)
	test -f camomile.cma && cp -f camomile.cma $(OCAMLLIB)
	test -f camomile.cmxa && cp -f camomile.cmxa $(OCAMLLIB)
	test -f camomile.cmxs && cp -f camomile.cmxs $(OCAMLLIB)
	mkdir -p $(DATADIR)
	mkdir -p $(DATADIR)/camomile
	mkdir -p $(DATADIR)/camomile/database
	cp -f database/*.mar $(DATADIR)/camomile/database
	mkdir -p $(DATADIR)/camomile/charmaps
	cp -f charmaps.mar/*.mar $(DATADIR)/camomile/charmaps
	mkdir -p $(DATADIR)/camomile/mappings
	cp -f mappings/*.mar $(DATADIR)/camomile/mappings

###################################################################
# Generic rules
###################################################################

.SUFFIXES: .mli .ml .cmi .cmo .cmx .mll .mly

.mli.cmi:
	$(OCAMLC) -c $(BFLAGS) $<

.ml.cmo:
	$(OCAMLC) -c $(BFLAGS) $<

.ml.o:
	$(OCAMLOPT) -c $(OFLAGS) $<

.ml.cmx:
	$(OCAMLOPT) -c $(OFLAGS) $<

.mll.ml:
	$(OCAMLLEX) $<

.mly.ml:
	$(OCAMLYACC) -v $<

.mly.mli:
	$(OCAMLYACC) -v $<

###################################################################
# backup, clean and depend :
###################################################################

clean::
	del /Q *.cm* *.obj *.so *.a */*.cm* */*.o pocaml\
	*/*.byte */*.opt
	del /Q charmaps.mar/*.mar
	del /Q mappings/*.mar

depend::
	del /Q .depend
	$(OCAMLDEP) *.ml *.mli\
	internal/*.ml internal/*.mli\
	public/*.ml public/*.ml\
	database/*.ml database/*.mli\
	mappings/*.ml mappings/*.mli\
	tools/parse_unidata.ml tools/parse_uniset.ml tools/camlcharmap.ml\
	tools/parse_specialcasing.ml tools/parse_casefolding.ml\
	> .depend

include .depend
